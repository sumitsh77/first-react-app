import React from 'react';
declare enum Direction {
    HORIZONTAL = 0,
    VERTICAL = 1
}
export declare function useTab(index: number): {
    isActive: boolean;
};
interface TabGroupProps {
    initialActiveTab?: number;
    numTabs: number;
    children: React.ReactNode;
    direction?: Direction;
}
export declare function TabGroup({ initialActiveTab, numTabs, direction, children, }: TabGroupProps): JSX.Element;
export declare namespace TabGroup {
    var Tab: typeof import("./Tabs").Tab;
    var TabPanel: typeof import("./Tabs").TabPanel;
    var TabList: typeof import("./Tabs").TabList;
    var useTab: typeof import("./Tabs").useTab;
    var direction: typeof Direction;
}
interface TabProps {
    index: number;
    className: string;
    activeClassName: string;
    inactiveClassName: string;
    trigger?: 'click' | 'hover' | 'none';
    children?: React.ReactNode;
    [key: string]: any;
}
export declare function Tab({ index, className, activeClassName, inactiveClassName, trigger, ...props }: TabProps): JSX.Element;
declare type HTMLTags = keyof JSX.IntrinsicElements;
interface TabPanelProps {
    as?: HTMLTags;
    index: number;
    className: string;
    activeClassName: string;
    inactiveClassName: string;
    children?: React.ReactNode;
    [key: string]: any;
}
export declare function TabPanel({ as: Component, index, className, activeClassName, inactiveClassName, ...props }: TabPanelProps): JSX.Element;
interface TabListProps {
    as?: HTMLTags;
    children?: React.ReactNode;
    [key: string]: any;
}
export declare function TabList({ as: Component, ...props }: TabListProps): JSX.Element;
export {};
